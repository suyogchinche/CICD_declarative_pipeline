package com.vogella.maven.quickstart;


//Generated by Selenium IDE
import org.testng.*;
import org.testng.annotations.*;
//import static org.testng.Assert.*;
import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.containsString;
import static org.hamcrest.Matchers.equalTo;
import static org.hamcrest.Matchers.is;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.support.ui.Wait;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.*;
public class NexusSuiteIT {
    private WebDriver driver;
    private Map<String, Object> vars;
    JavascriptExecutor js;
    private static DesiredCapabilities capabillities;
    private static Wait<WebDriver> wait;

    @BeforeClass
    public void setUp() throws Exception {
        // System.setProperty("webdriver.chrome.driver", "C:\\Users\\schinche\\Desktop\\selenium\\chromedriver_win32\\chromedriver.exe");
        //System.setProperty("webdriver.chrome.driver","/root/my_workspace/CICD_declarative_pipeline/chrome_drivers/chromedriver");
        //System.setProperty("webdriver.chrome.driver","/usr/local/bin/chromedriver");
    
        capabillities = DesiredCapabilities.chrome();
        driver = new RemoteWebDriver(new URL("http://worker-node1:4444/wd/hub"), capabillities);
        capabillities.setBrowserName("chrome"); 
        wait = new WebDriverWait(driver, 6000);
            
        //driver = new ChromeDriver();

        //Set Chrome Headless mode as TRUE
        ChromeOptions options = new ChromeOptions();
        options.setHeadless(true);
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
    }

    @AfterClass
    public void tearDown() {
        driver.quit();
    }

    @Test
    public void ajaxVerify() {
        driver.get("https://www.w3schools.com/");
        driver.manage().window().setSize(new Dimension(1366, 728));
        driver.findElement(By.id("navbtn_tutorials")).click();
        driver.findElement(By.cssSelector("#nav_tutorials .w3-col:nth-child(2) > .w3-bar-item:nth-child(7)")).click();
        driver.findElement(By.cssSelector("h1:nth-child(2)")).click();
        driver.findElement(By.id("mainLeaderboard")).click();
        assertThat(driver.getTitle(), is("AJAX Introduction"));

    }
    @Test
    public void sQLVerify() {
        driver.get("https://www.w3schools.com/");
        driver.manage().window().setSize(new Dimension(1366, 728));
        driver.findElement(By.id("navbtn_tutorials")).click();
        driver.findElement(By.cssSelector("#nav_tutorials .w3-col:nth-child(3) > .w3-bar-item:nth-child(2)")).click();
        driver.findElement(By.cssSelector("h1:nth-child(2)")).click();
        assertThat(driver.getTitle(), is("SQL Tutorial"));
    }
    @Test
    public void xMLverify() {
        driver.get("https://www.w3schools.com/");
        driver.manage().window().setSize(new Dimension(1366, 728));
        driver.findElement(By.id("navbtn_tutorials")).click();
        driver.findElement(By.cssSelector("#nav_tutorials .w3-hide-medium > .w3-bar-item:nth-child(2)")).click();
        assertThat(driver.getTitle(), is("XML Tutorial"));

    }
}
